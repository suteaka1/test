所属するネットワークの中で他に応答する機器を調べる

・pingattack.sh

1.自分の所属するネットワークを調べる
2.ip adrr showを実行
3.「inet」が含まれる行だけを抽出
4.「/24」が含まれる行を抽出
5.「ipv6」が含まれる行を排除
6.「eth1」が含まれる行を排除
7.ローカルループバックアドレスを排除
8.「inet」の後ろに「:」を付けたし、「inet:」に置換する
9.「:」をデリミタにして「inet:」を排除する
10.最初の変数に「192.168.200.1/24」のようにipアドレスが含まれるのでprintfで出力
11.「/24」を削除
12.「.」をスペースに置換する
13.スペースが含まれたので第三オクテットまでを格納する。「192 168 200」のようになる
14.0からカウントし、255を最大値として宣言する
15.whileで変数「COUNT」が「MAX_COUNT」の間でループ内を実行する条件を設定
16.「COUNT」変数内でexprコマンドを用いて+1ずつ加算するよう命令
17.pingコマンドで5回疎通テストをする
18.第三オクテットまでが所属するネットワークで固定されるよう、13.で宣言したip3を用いる。
19.「第一～第三オクテット.加算される第四オクテット」として出力し、pingする
20.exit 0にして正常終了で引き渡す

・devicehealth.sh
pingattack.shの結果を元に接続するもの一覧、接続しないもの一覧などに纏めたい
pingattack.shのログを元に作業させる

--- 8.8.8.8 ping statistics ---
5 packets transmitted, 5 received, 0% packet loss, time 4012ms

などと出てくる文を1行にまとめる

この段階で"IPアドレス"と疎通できているかどうかを"～% packet loss"で判断できる

1行にまとめたものを列挙していく

x	==>「100% packet loss」を含む行の行頭にバツ印を挿入

o	==>「100% packet loss」｛｛｛以外｝｝｝の行頭に丸印を挿入

例：
o	192.168.200.1
o	192.168.200.2
x	192.168.200.3
x	192.168.200.4
x	192.168.200.5
o	192.168.200.6

これをログとして出力する
①必要なときにログから「o」か「x」をgrepで検索させる
②もしくはシェルスクリプトに実装して、シェルスクリプトを実行する際のオプションの一つにする？
